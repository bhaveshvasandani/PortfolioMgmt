{
  "name": "Devops Portfolio Management API",
  "tagline": "",
  "body": "# Portfolio Management RESTful API\r\n*The project was developed for the DevOps course of New York University (CSCI-GA.3033-014).*\r\n\r\n## I - What is it?\r\n- It is a RESTful API for a portfolio management.\r\n- It uses many technologies: Python, Flask, Vagrant, Swagger, Redis, Docker, ...\r\n- It can be run locally on a virtual machine with Vagrant or on Bluemix (IBM) remotely.\r\n- The Redis database is stored on IBM Bluemix\r\n\r\n## II - Access the API\r\n- Access the root URL of the API on Bluemix at [https://portfoliomgmt.mybluemix.net](https://portfoliomgmt.mybluemix.net)\r\n- Access the root URL of the API on the Bluemix container at [http://portfoliocontainer.mybluemix.net/](http://portfoliocontainer.mybluemix.net/)\r\n- Access it on your virtual Vagrant machine at [localhost:5000](localhost:5000)\r\n- The root URL uses **Swagger** to show a descriptive list of all available RESTful calls such as `POST`, `DELETE`, `PUT` and `GET`.\r\n\r\n## III - Obtain the source code and minimum requirements\r\n1. Install Vagrant from [vagrantup.com](https://www.vagrantup.com/downloads.html)\r\n2. Download the project\r\n  - Without git\r\n    - Download the ZIP file by clicking [here](https://github.com/qdm12/Devops_RESTful/archive/master.zip).\r\n    - Extract the ZIP file.\r\n  - With git (recommended)\r\n    - Install git if you don't have it from [git-scm.com](https://git-scm.com/downloads) or use `apt-get install git`.\r\n    - Open a terminal and enter `git clone https://github.com/qdm12/Devops_RESTful.git`\r\n3. Go to the project directory with a terminal with `cd Devops_RESTFUL`\r\n\r\n## IV - Run it on your machine with Vagrant\r\n1. Make sure to follow the steps of **III - Obtain the source code and minimum requirements**. \r\n2. Enter `vagrant up && vagrant ssh` (this will install the box, docker etc.)\r\n3. Enter `python /vagrant/server.py` (in the virtual machine you just logged in)\r\n4. Access the Python Flask server with your browser at [localhost:5000](localhost:5000). You can then make API calls with Swagger.\r\n5. You can also use the Chrome extension `Postman` for example to send RESTful requests such as `POST`. Install it [here](https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en).\r\n6. To update Swagger, refer to the information in the [Github `static` directory](https://github.com/qdm12/Devops_RESTful/tree/master/static).\r\n\r\n## V - Run it on Bluemix\r\n1. Make sure to follow the steps of **III - Obtain the source code and minimum requirements** although you don't need Vagrant.\r\n2. Login to Bluemix as follows:\r\n  - `cf login https://api.ng.bluemix.net -u username -o organization -s \"Portfolio Management\"`\r\n  - Enter the API endpoint as `https://api.ng.bluemix.net`\r\n  - Enter your password\r\n3. Enter `cf push PortfolioMgmt`\r\n4. You can then access it at [https://portfoliomgmt.mybluemix.net](https://portfoliomgmt.mybluemix.net)\r\n\r\n\r\n## VI - Run it on a Docker container\r\n\r\n### A) Build and run it on Vagrant\r\n1. Make sure to follow the steps of **III - Obtain the source code and minimum requirements**. \r\n2. Enter `vagrant up && vagrant ssh` (this will install the box, docker etc.)\r\n3. Enter `cd /vagrant` (in the virtual machine you just logged in)\r\n4. Enter `docker build -t docker-portfoliomgmt .`\r\n  - **Don't forget the '.' !**\r\n  - This builds a Docker image `docker-portfoliomgmt` from the `Dockerfile` description file.\r\n  - You can list your local Docker images with `docker images` to make sure it was created.\r\n4. Run the Docker image with `docker run --rm -p 5000:5000 --link redis docker-portfoliomgmt`.\r\n  - The `--rm` option automatically removes the container when it exits.\r\n  - The `-p 5000:5000` option publishes the container's 5000 port to the host.\r\n  - The `--link redis` option links the `docker-portfoliomgmt` to the `redis` container.\r\n  - You can check the container is runnig with `docker ps -a`.\r\n5. As for *IV*, you can access the Python Flask server with your browser at [localhost:5000](localhost:5000). You can then make API calls with Swagger.\r\n\r\n### B) Push and run it on Bluemix\r\n1. Make sure you had followed the steps of *A) Build and run it on Vagrant*.\r\n2. In Vagrant (`vagrant up && vagrant ssh`), login in the bluemix server as follows:\r\n  - `cf login https://api.ng.bluemix.net -u username -o organization -s \"Portfolio Management\"`\r\n  - Enter the API endpoint as `https://api.ng.bluemix.net`\r\n  - Enter your password\r\n  - **TEMPORARY**: Enter `echo Y | cf install-plugin https://static-ice.ng.bluemix.net/ibm-containers-linux_x64` to install *cf ic*.\r\n  - `cf ic login`\r\n4. If not done already, create your namespace with `cf ic namespace set portfoliocontainer`\r\n5. Tag the Docker image with the remote container name `registry.ng.bluemix.net/portfoliocontainer/devops-hw2` with the following command: `docker tag docker-portfoliomgmt registry.ng.bluemix.net/portfoliocontainer/devops-hw2`\r\n6. Push it with `docker push registry.ng.bluemix.net/portfoliocontainer/devops-hw2`\r\n7. The Docker image should be on the Bluemix webpage. Click on it to create a container.\r\n8. Access the URL showing as *Routes* under *Group details* to access the running container. You can access it at [http://portfoliocontainer.mybluemix.net](http://portfoliocontainer.mybluemix.net)\r\n\r\n## VII - Test driven development and PyUnit\r\n1. If not on Vagrant, install **pip** and enter `pip install nose rednose coverage`\r\n2. Run the server tests and find the test coverage with `nosetests --rednose -v --with-coverage --cover-package=server`\r\n3. Or you can use `coverage run server_test.py && coverage report -m --include=server.py`\r\n\r\n## For ongoing work, please refer to this page:\r\n[https://github.com/rofrano/nyu-homework-2](https://github.com/rofrano/nyu-homework-2)\r\n- PART 1: Deploy the service in Docker Containers on Bluemix (submit URL of service on Bluemix)\r\n- PART 2: BDD and TDD Automated Testing (Good testing coverage required)\r\n- PART 3: Add an automated CI/CD DevOps Pipeline\r\n\r\n## To contribute\r\n- Send me an email at quentin.mcgaw @ gmail . com with your Github username and a reason.\r\n- To update the Swagger documentation, please refer to the readme.md in the static folder [here](https://github.com/qdm12/Devops_RESTful/tree/master/static)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}